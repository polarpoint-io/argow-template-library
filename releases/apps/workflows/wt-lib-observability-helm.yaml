# workflow template to lint, version and push helm charts

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: wt-lib-observability-helm
  namespace: workflows
spec:
  templates:
  - name: semantic-version-alerts
    container:
      image: polarpoint/helm-client:3.8.2
      imagePullPolicy: Always 
      command: [sh, -c]
      args: ["cd /alerts/src && ls -rtl && helm plugin list && 
              helm release . --source helm --bump minor --print-computed-version > /mnt/out/helm_version.txt &&
              helm release . --source helm --bump minor"]
      workingDir: "/alerts/src"       
      volumeMounts:
      - name: alerts
        mountPath: /alerts
      - name: out
        mountPath: /mnt/out
    volumes:
      - name: out
        emptyDir: { }
    outputs:
      parameters:
      - name: helm_version
        valueFrom:
          path: /mnt/out/helm_version.txt

  - name: git-push-alerts
    inputs:
      parameters:
      - name: HELM_CHART_REPO
      - name: HELM_CHART_REVISION
    container:
      image: alpine/git 
      command: [sh, -c]
      workingDir: "/alerts/src"      
      args: ["
              cd /alerts/src/ &&
              git config --global user.name 'argo-workflows' &&
              git config --global user.email 'argo@runa.local' &&
              git add /alerts/src/files/alerts/* &&
              git add /alerts/src/Chart.yaml &&
              git status &&
              git commit -m 'feat: argo-workflows add alerts' &&
              git push https://${GITLAB_USER}:${GITLAB_PASSWORD}@`echo  {{inputs.parameters.HELM_CHART_REPO}} }} | cut -c 9-255`  --follow-tags &&
              echo 'git push completed'"]
      env:
      - name: GITLAB_USER
        valueFrom:
          secretKeyRef:
            name: git-gitlab-access
            key: username
      - name: GITLAB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: git-gitlab-access
            key: password
      volumeMounts:
      - name: alerts
        mountPath: /alerts

  - name: helm-init-alerts
    script:
      image: polarpoint/helm-client:3.8.2
      imagePullPolicy: Always 
      command: [sh, -c]
      args: ["helm repo index . "]
      workingDir: "/alerts/src"      
      volumeMounts:
      - name: alerts
        mountPath: /alerts

  - name: helm-lint-alerts
    script:
      image: polarpoint/helm-client:3.8.2
      imagePullPolicy: Always 
      command: [sh, -c]
      args: ["helm lint . "]
      workingDir: "/alerts/src"      
      volumeMounts:
      - name: alerts
        mountPath: /alerts

  - name: helm-package-alerts
    script:
      image: polarpoint/helm-client:3.8.2
      imagePullPolicy: Always 
      command: [sh, -c]
      args: ["helm package . "]
      workingDir: "/alerts/src"       
      volumeMounts:
      - name: alerts
        mountPath: /alerts

  - name: helm-publish-alerts
    script:
      image: polarpoint/helm-client:3.8.2
      imagePullPolicy: Always 
      command: [sh, -c]
      args: ["  helm repo add --username=$CHART_USER --password=$CHART_PASSWORD harbor https://harbor host &&
                helm cm-push --username=$CHART_USER --password=$CHART_PASSWORD *.tgz harbor "]
      workingDir: "/workspace/alerts/src"      
      volumeMounts:
      - name: workspace
        mountPath: /workspace 
      env:
      - name: CHART_USER
        valueFrom:
          secretKeyRef:
            name: harbor-chart-robot
            key: username
      - name: CHART_PASSWORD
        valueFrom:
          secretKeyRef:
            name: harbor-chart-robot
            key: password

  - name: thanos-argocd-alerts-synchronise
    inputs:
      parameters:
      - name: ARGOCD_MONITORING_APPLICATIONS
      - name: ARGOCD_MONITORING_APP_REVISION
      - name: ARGOCD_MONITORING_APP_PATH
      - name: ARGOCD_MONITORING_APP_YAML_PATH
      - name: HELM_VERSION
      artifacts:
      - name: argocd-alerts
        path: /workspace/argocd/applications
        git:
          repo:  {{inputs.parameters.ARGOCD_MONITORING_APPLICATIONS}}
          revision: {{inputs.parameters.ARGOCD_MONITORING_APP_REVISION}}
          usernameSecret:
            name: git-gitlab-access
            key: username
          passwordSecret:
            name: git-gitlab-access
            key: password
    container:
      image: polarpoint/yq:3.4.1
      imagePullPolicy: Always
      command: [sh, -c]
      args: ["
              cd /workspace/argocd/applications/{{ inputs.parameters.ARGOCD_MONITORING_APP_PATH}} &&
              yq write -i values.yaml  {{inputs.parameters.ARGOCD_MONITORING_APP_YAML_PATH }} {{inputs.parameters.HELM_VERSION}} &&
              cat values.yaml 
              "]
      volumeMounts:
      - name: workspace
        mountPath: /workspace

  - name: git-push-helm-chart
    inputs:
      parameters:
      - name: ARGOCD_MONITORING_APP_PATH
      - name: ARGOCD_MONITORING_APP_REVISION
      - name: HELM_VERSION  
    container:
      image: alpine/git
      command: [sh, -c]
      args: ["
        mkdir -p ~/.ssh/ &&  
        cd /workspace/argocd/applications/{{ inputs.parameters.ARGOCD_MONITORING_APP_PATH}} &&
        ls -rtl &&  
            git status &&
            git add values.yaml &&       
            git commit -m 'feat: {{ inputs.parameters.HELM_VERSION}} argo workflows' &&             
            git push https://${GITLAB_USER}:${GITLAB_PASS}@${HELM_CHART_REPO}  --follow-tags &&
        echo 'git push done'
      "]
      env:      
      - name: GITLAB_USER
        valueFrom:
          secretKeyRef:
            name: git-gitlab-access
            key: username
      - name: GITLAB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: git-gitlab-access
            key: password
      volumeMounts:
      - name: workspace
        mountPath: /workspace