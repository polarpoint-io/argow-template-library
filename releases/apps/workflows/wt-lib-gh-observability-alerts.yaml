# workflow template to prepare, check,and create alert

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: wt-lib-gh-observability-alerts
  namespace: workflows
spec:
  templates:
  - name: jsonnet-bundler
    container:
      image: polarpoint/jb:0.2.0
      imagePullPolicy: Always
      command: [sh, -c]
      args: ["tree &&
              jb install "]
      workingDir: "/workspace/src"
      volumeMounts:
      - name: workspace
        mountPath: /workspace

  - name: create-alerts
    inputs:
      parameters:
      - name: prometheus-resource
    container:
      image: polarpoint/jb:0.2.0
      command: [sh, -c]
      args: ["TEMPLATE_TYPE={{ printf "{{inputs.parameters.prometheus-resource}}" }}
              sh /workspace/src/scripts/generate_rules.sh &&
              tree"]
      workingDir: "/workspace/src"
      volumeMounts:
      - name: workspace
        mountPath: /workspace

  - name: thanos-alerts-initialise
    inputs:
      parameters:
      - name: HELM_CHART_REPO
      - name: HELM_CHART_REVISION
      artifacts:
      - name: source
        path: /alerts/src
        git:
          repo: "{{ printf " {{ inputs.parameters.HELM_CHART_REPO }}" }}"
          revision: "{{ printf " {{ inputs.parameters.HELM_CHART_REVISION }}" }}"
          usernameSecret:
            name: git-gitlab-access
            key: username
          passwordSecret:
            name: git-gitlab-access
            key: password
    container:
      image: alpine/git
      command: [sh, -c]
      args: ["
              echo @${HELM_CHART_REPO}
              cd /workspace/alerts/src/ &&
              mkdir -p /alerts/src/files/alerts && 
              ls -ltra /alerts/src/files/alerts && 
              ls -ltra /workspace/src/alerts/generated && 
              cp -rf /workspace/src/alerts/generated/* /alerts/src/files/alerts/ && 
              ls -ltra /alerts/src/files/alerts "]
      env:
      - name: GITLAB_USER
        valueFrom:
          secretKeyRef:
            name: git-gitlab-access
            key: username
      - name: GITLAB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: git-gitlab-access
            key: password
      workingDir: "/workspace/alerts/src"
      volumeMounts:
      - name: workspace
        mountPath: /workspace
      - name: alerts
        mountPath: /alerts

  - name: check-alerts
    container:
      image: prom/prometheus:v2.34.0
      command: [sh, -c]
      args: ["promtool check rules alerts/generated/*.yaml"]
      workingDir: "/workspace/src"
      volumeMounts:
      - name: workspace
        mountPath: /workspace